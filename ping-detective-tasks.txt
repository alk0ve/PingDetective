
META: write tasks, not notes (i.e. "develop X", not "X should be different"), and make sure each task can be completed by itself

TASKS:
 - refactor Status enum to its own file, have isAccessible() return Status

 - test status tracker class in console app

 - REWORK SimplePing:
	- we ping serially & timeouts are up to 0.5s - two timeouts and we've wasted a second
	- NEED to create several Ping objects, use their async API, then wait for all of them to finish, then release all of them (?)


 - make bare-bones UI implementation
	- copy from SerialPop and remove anything irrelevant
	- should have hostname list in configuration, popups for inaccessible IPs and that's it
	- invoking the status tracker class should happen 1/s, but the call also takes time so you should keep track of time and sleep not 1s but the time left (which will be probably less)

 - TESTABILITY HACK: add #ifdef to isAccessible() to make it check for existence of files in a specific folder instead of pinging
	- this way I can test the UI separately	

	
	- API change, probably - remove SimplePing, do everything in StatusTracker.ping()
		- StatusTracker.ping() should still be blocking, but now should take only up to 0.5s

 - add ping 1/s (configurable)
 
 - add UI where right-click should show statuses of all the machines (in black or gray)
 
 - add debouncing: configurable number of seconds/pings before you notify of a state change
  
 - add batching: report all the changes in a single notification
  
 - add way to edit hostname list in UI
 
 - add way to edit other configuration values in UI
  
 - add icon to the executable (and the taskbar)

 - ???

NOTES:
 - borrow liberally from SerialPop